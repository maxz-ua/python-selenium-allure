name: Python application

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: write

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run smoke tests
        run: pytest -m smoke --alluredir=allure-results-smoke
      - name: Upload Allure results (smoke)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-smoke
          path: allure-results-smoke
          retention-days: 7

  sanity:
    runs-on: ubuntu-latest
    needs: smoke
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run sanity tests
        run: pytest -m sanity --alluredir=allure-results-sanity
      - name: Upload Allure results (sanity)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-sanity
          path: allure-results-sanity
          retention-days: 7

  regression:
    runs-on: ubuntu-latest
    needs: sanity
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run regression tests
        run: pytest -m regression --alluredir=allure-results-regression
      - name: Upload Allure results (regression)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-regression
          path: allure-results-regression
          retention-days: 7

  report:
    runs-on: ubuntu-latest
    needs: [smoke, sanity, regression]
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-smoke
          path: allure-results-smoke
        continue-on-error: true
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-sanity
          path: allure-results-sanity
        continue-on-error: true
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-regression
          path: allure-results-regression
        continue-on-error: true
      - name: Install Allure CLI
        run: |
          sudo apt-get update && sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
      - name: Merge Allure results
        run: |
          mkdir merged-allure-results
          cp -r allure-results-smoke/* merged-allure-results/ || true
          cp -r allure-results-sanity/* merged-allure-results/ || true
          cp -r allure-results-regression/* merged-allure-results/ || true
      - name: List merged Allure results
        run: ls -l merged-allure-results
      - name: Generate Allure report
        run: |
          allure generate merged-allure-results --clean -o allure-report
      - name: Upload Allure HTML report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 7
      - name: List Allure report contents
        run: ls -R allure-report

  deploy:
    runs-on: ubuntu-latest
    needs: report
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report
      - name: Download previous Allure report (if exists)
        run: |
          git fetch origin gh-pages
          git checkout gh-pages -- ./history || true
        continue-on-error: true
      - name: Copy history to new report
        run: |
          if [ -d history ]; then
            cp -r history allure-report/
          fi
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          force_orphan: true